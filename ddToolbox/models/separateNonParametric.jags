# Discount Fraction estimated separately for each delay

# **** WARNING ****
# We also assume reward A is immediate, ie DA=0


# Observed data being provided:
# - participantIndexList
# - T (vector of trials per participant)
# - A, B
# - uniqueDelays
# - delayLookUp[t] is an index into the delay

# Parameters
# - alpha
# - epsilon
# - discountFraction: a vector of params, one for each unique delay

model{

# priors
for (p in participantIndexList){
    epsilon[p]  ~ dbeta(1.1 , 10.9) T(,0.5)
    alpha[p]    ~ dexp(0.01)

    # PRIOR OVER DISCOUNT FRACTION
	for (d in 1:length(uniqueDelays)) {
		
        # 'safe' prior, centred on 1, with a large variance, but truncated
        discountFraction[p,d] ~ dnorm( 1, 1/ 1^2) T(0,5)
        
        # normal prior (centred on 1) but whose variance increases with delay
        #discountFraction[p,d] ~ dnorm( 1, 1/(0.000001 + (0.01 * uniqueDelays[d]) )) T(0,5)
	}
}

#  phi() cannot be vectorised

for (t in 1:length(ID)) {
	VA[t] <- A[t] # NO DELAY FOR A
	VB[t] <- (B[t]) * discountFraction[ID[t], delayLookUp[t] ]

    # Psychometric function
	P[t] <- epsilon[ID[t]] + (1-2*epsilon[ID[t]]) * phi( (VB[t]-VA[t]) / alpha[ID[t]] )

	R[t]         ~ dbern(P[t]) # likelihood of actual response
	Rpostpred[t] ~ dbern(P[t]) # posterior predicted response
}

}
