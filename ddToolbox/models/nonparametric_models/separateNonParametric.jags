# Discount Fraction estimated separately for each delay

# **** WARNING ****
# We also assume reward A is immediate, ie DA=0


# Observed data being provided:
# - participantIndexList
# - T (vector of trials per participant)
# - A, B
# - uniqueDelays
# - delayLookUp[t] is an index into the delay

# Parameters
# - alpha
# - epsilon
# - Rstar: 



model{

# priors
for (p in participantIndexList){
    epsilon[p]  ~ dbeta(1+1 , 1+100) T(,0.5)
    alpha[p]    ~ dnorm(0, 1/0.1^2) T(0,) # <--------------- FIGURE OUT BEST PRIOR. 

    # PRIOR OVER DISCOUNT FRACTION
    # prior over A/B should be centered on 1 if we are expecting discounting and anti-discounting, and can be truncates
    # prior over A-B should be centered on 0 if we are expecting discounting and anti-discounting, and can be truncates
	for (d in 1:length(uniqueDelays)) {
        Rstar[p,d] ~ dnorm(1, 1/ 1^2) T(0,)   
	}
}

for (t in 1:length(ID)) {
	rewardratio[t] <- A[t]/B[t]
    
    # if we are dealing with negative rewards, we want alpha to flip to negative, in order to 'horizontally flip' the psychometric function
    signflip[t] <- ifelse( B[t]>0, 1, -1 )
    
	df[t] <- Rstar[ID[t], delayLookUp[t]]
	P[t] <- epsilon[ID[t]] + (1-2*epsilon[ID[t]]) * (1 - phi( (rewardratio[t]-df[t]) / alpha[ID[t]]*signflip[t]  ))

	R[t]         ~ dbern(P[t]) # likelihood of actual response
	Rpostpred[t] ~ dbern(P[t]) # posterior predicted response
}

}
