# RANDOM FACTORS:   m[p], c[p], epsilon[p], alpha[p]
# HYPER-PRIORS ON:  epsilon[p], alpha[p]

model{

# DISCOUNT FUNCTION PARAMETERS =================================================
# RANDOM (BY PARTICIPANT) FACTORS; HYPER-PRIORS = NO

# slope (m)
groupMmu        <- -0.243
groupMsigma     <- 0.5

# intercept (c)
groupCmu        <- 0
groupCsigma     <- 10

# Participant-level parameters
for (p in 1:nRealExperimentFiles){
	m[p]        ~ dnorm(groupMmu, 1/(groupMsigma^2))
	c[p]        ~ dnorm(groupCmu, 1/(groupCsigma^2))
}


# MODEL-SPECIFIC: CALCULATION OF PRESENT SUBJECTIVE VALUES
for (t in 1:length(ID)) {
	# Calculate log discount rate for each reward
	lkA[t] <- m[ID[t]]*log(abs(A[t]))+c[ID[t]]
	lkB[t] <- m[ID[t]]*log(abs(B[t]))+c[ID[t]]

	# calculate present subjective value for each reward
	VA[t] <- A[t] / (1+(exp(lkA[t])*DA[t]))
	VB[t] <- B[t] / (1+(exp(lkB[t])*DB[t]))
}


# RESPONSE ERROR PARAMETERS ====================================================
# comparison acuity (alpha)
groupALPHAmu        ~ dunif(0,100)
groupALPHAsigma     ~ dunif(0,100)

# error rates (epsilon)
groupW          ~ dbeta(1.1, 10.9)  # mode for lapse rate
groupKminus2    ~ dgamma(0.01,0.01) # concentration parameter
groupK          <- groupKminus2+2

epsilon_alpha <- groupW*(groupK-2)+1
epsilon_beta <- (1-groupW)*(groupK-2)+1

for (p in 1:(nRealExperimentFiles+1)){ # +1 for unobserved participant
	epsilon[p]  ~ dbeta(epsilon_alpha , epsilon_beta ) T(,0.5)

    # using reparameterisation to avoid funnel of hell
    alpha_offset[p] ~ dnorm(0,1) T(0,)
    alpha[p] <- groupALPHAmu + alpha_offset[p] * groupALPHAsigma
}


# MODEL IN-SPECIFIC CODE BELOW... SHOULD NOT CHANGE ACROSS MODELS ==============

# Psychometric function
for (t in 1:length(ID)) {
	P[t] <- epsilon[ID[t]] + (1-2*epsilon[ID[t]]) * phi( (VB[t]-VA[t]) / alpha[ID[t]] )
}

# response likelihood
for (t in 1:length(ID)) {
	R[t]  ~ dbern(P[t]) # likelihood of actual response
	log_lik[t] <- logdensity.bern(R[t], P[t])
}

# POSTERIOR PREDICTION
for (t in 1:length(ID)) {
	Rpostpred[t] ~ dbern(P[t])
}

}
