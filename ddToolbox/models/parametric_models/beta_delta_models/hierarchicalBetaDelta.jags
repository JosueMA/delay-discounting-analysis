# RANDOM FACTORS:   beta[p], delta[p], epsilon[p], alpha[p]
# HYPER-PRIORS ON:  beta[p], delta[p], epsilon[p], alpha[p]

model{

# DISCOUNT FUNCTION PARAMETERS =================================================
# RANDOM (BY PARTICIPANT) FACTORS; HYPER-PRIORS = NO

group_delta_MEAN      <- 0.9995
group_delta_PRECISION <- 1/(0.0009^2)

group_beta_MEAN      <- 0.84
group_beta_PRECISION <- 1/(0.11^2)

for (p in 1:nRealExperimentFiles){

	# get some instability if we use the reparameterisation, so we'll avoid this for the moment
	#delta_offset[p]    ~ dnorm(0,1)
	#delta[p] <- group_delta_MEAN + delta_offset[p] * group_delta_PRECISION
	delta[p] ~ dnorm(group_delta_MEAN, group_delta_PRECISION)

	# using reparameterisation to avoid funnel of hell
	beta_offset[p]    ~ dnorm(0,1)
	beta[p] <- group_beta_MEAN + beta_offset[p] * group_beta_PRECISION
	#beta[p] ~ dnorm(group_beta_MEAN, group_beta_PRECISION)
}

# MODEL-SPECIFIC: CALCULATION OF PRESENT SUBJECTIVE VALUES
for (t in 1:length(ID)) {
	# calculate present subjective value for each reward
	VA[t] <- A[t] * beta[ID[t]] * (delta[ID[t]] ^ DA[t])
	VB[t] <- B[t] * beta[ID[t]] * (delta[ID[t]] ^ DB[t])
}

# RESPONSE ERROR PARAMETERS ====================================================
# comparison acuity (alpha)
groupALPHAmu        ~ dnorm(0,1/(100^2)) T(0,) ## UPDATED SINCE PAPER
groupALPHAsigma     ~ dexp(0.5)

# error rates (epsilon)
groupW          ~ dbeta(1.1, 10.9)  # mode for lapse rate
groupKminus2    ~ dgamma(0.5,0.5) # concentration parameter ## UPDATED SINCE PAPER
groupK          <- groupKminus2+2

epsilon_alpha <- groupW*(groupK-2)+1
epsilon_beta <- (1-groupW)*(groupK-2)+1

for (p in 1:(nRealExperimentFiles+1)){ # +1 for unobserved participant
	epsilon[p]  ~ dbeta(epsilon_alpha , epsilon_beta ) T(,0.5)

    # using reparameterisation to avoid funnel of hell
    alpha_offset[p] ~ dnorm(0,1) T(0,)
    alpha[p] <- groupALPHAmu + alpha_offset[p] * groupALPHAsigma
}


# MODEL IN-SPECIFIC CODE BELOW... SHOULD NOT CHANGE ACROSS MODELS ==============

# Psychometric function
for (t in 1:length(ID)) {
	P[t] <- epsilon[ID[t]] + (1-2*epsilon[ID[t]]) * phi( (VB[t]-VA[t]) / alpha[ID[t]] )
}

# response likelihood
for (t in 1:length(ID)) {
	R[t]  ~ dbern(P[t]) # likelihood of actual response
}

# POSTERIOR PREDICTION
for (t in 1:length(ID)) {
	Rpostpred[t] ~ dbern(P[t])
}

}
