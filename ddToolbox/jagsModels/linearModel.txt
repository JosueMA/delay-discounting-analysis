# JAGS model for delay discounting.
# - model of multiple participants
# - models the magnitude effect

model{

    # Group-level  ------------------------

    # parameters for the linear relationship between the covariate and m[p]
    thetaM[1] ~ dnorm(0,1/1000)     # slope
    thetaM[2] ~ dunif(-1000,1000)   # intercept
    thetaM[3] ~ dunif(0,1000)       # stdev?
    thetaM[4] ~ dexp(1/29.0)        # nu-1

    # parameters for the linear relationship between the covariate and c[p]
    thetaC[1] ~ dnorm(0,1/1000)     # slope
    thetaC[2] ~ dunif(-1000,1000)   # intercept
    thetaC[3] ~ dunif(0,1000)       # stdev?
    thetaC[4] ~ dexp(1/29.0)        # nu-1

    # In order to calculate Bayes Factors, we need to take samples from the priors, independent from the data
    thetaMprior ~ dnorm(0,1/1000)     # slope
    thetaCprior ~ dnorm(0,1/1000)     # slope

    # Calculate values of m as a function of covariate value, for visualisation purposes
    for (n in 1:length(covariateProbeVals)){
        probeM[n] ~ dnorm(thetaM[1]*covariateProbeVals[n]+thetaM[2], 1/thetaM[3])
        probeC[n] ~ dnorm(thetaC[1]*covariateProbeVals[n]+thetaC[2], 1/thetaC[3])
    }

    # group level priors over parameters for alpha (comparison acuity)
    groupALPHAmu ~ dunif(0,1000)
    groupALPHAsigma ~ dunif(0,1000)

    # Take samples of group-level parameters. (Not used for calculations, just for plotting group level LR and ALPHA)
    #glM ~ dnorm(groupMmu, 1/groupMsigma)
    #glC ~ dnorm(groupCmu, 1/groupCsigma)
    glLR ~ dbeta( groupW*(groupK-2)+1 , (1-groupW)*(groupK-2)+1 )
    glALPHA ~ dnorm(groupALPHAmu, 1/groupALPHAsigma) T(0,) # TRUNCATION ------

    # for lapse rates ~~~~~~~~~~~
    groupW       ~ dbeta(1.1, 10.9) # mode for lapse rate
    groupKminus2 ~ dgamma(0.01,0.01) # concentration parameter
    groupK <- groupKminus2+2

    # MAGNITUDE EFFECT at the group level. This is not used to calculate anything, but just to visualise how log(k) varies as a function of log(B)
    #grouplogk <- groupMmu * logBInterp + groupCmu



    # Participant-level ------------------------------
    
    # same priors for all participants
    lrprior   ~ dbeta( groupW*(groupK-2)+1 , (1-groupW)*(groupK-2)+1)
    alphaprior~ dnorm(groupALPHAmu, 1/groupALPHAsigma) T(0,) # TRUNCATION ------
    #mprior    ~ dnorm(groupMmu, 1/groupMsigma)
    #cprior    ~ dnorm(groupCmu, 1/groupCsigma)

    # Parameter estimates for each participant
    for (p in 1:nParticipants){
        # robust regression with t-ditributed deviation from trendline
        m[p]    ~ dt(thetaM[1]*covariate[p]+thetaM[2], 1/thetaM[3], thetaM[4]+1)
        c[p]    ~ dt(thetaC[1]*covariate[p]+thetaC[2], 1/thetaC[3], thetaC[4]+1)

        #m[p]    ~ dnorm(thetaM[1]*covariate[p]+thetaM[2], 1/thetaM[3])
        #c[p]    ~ dnorm(thetaC[1]*covariate[p]+thetaC[2], 1/thetaC[3])

        lr[p]   ~ dbeta( groupW*(groupK-2)+1 , (1-groupW)*(groupK-2)+1 )
        alpha[p]~ dnorm(groupALPHAmu, 1/groupALPHAsigma) T(0,) # TRUNCATION ------
    }


    # loop over all trials for all participants

    for (p in 1:nParticipants){
        for (t in 1:T[p]) {  

            # MAGNITUDE EFFECT
            lkA[p,t] <- m[p]*log(A[p,t])+c[p]
            lkB[p,t] <- m[p]*log(B[p,t])+c[p]

            # calculate present subjective value for each reward
            VA[p,t] <- A[p,t] / (1+(exp(lkA[p,t])*DA[p,t]))
            VB[p,t] <- B[p,t] / (1+(exp(lkB[p,t])*DB[p,t]))

            # psychometric function
            P[p,t] <- lr[p] + (1-2*lr[p]) * phi( (VB[p,t]-VA[p,t]) / alpha[p] )

            # response
            R[p,t] ~ dbin(P[p,t],1)

            # posterior predictive
            #Rpostpred[t] ~ dbin(P[t],1)
        }
    }
}
